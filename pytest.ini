[pytest]
# Pytest configuration for Bot Data Scientist

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = tests

# Minimum version
minversion = 7.0

# Add current directory to Python path
pythonpath = .

# Coverage options
addopts =
    # Verbose output
    -v
    # Show summary of all test outcomes
    -ra
    # Show local variables in tracebacks
    --showlocals
    # Strict markers - fail on unknown markers
    --strict-markers
    # Coverage options
    --cov=botds
    --cov-report=html:audit-deployment/phase-2/04-ARTIFACTS/coverage-report/html
    --cov-report=json:audit-deployment/phase-2/04-ARTIFACTS/coverage-report/coverage.json
    --cov-report=term-missing
    # Parallel execution (use -n auto for automatic CPU detection)
    # -n auto
    # Fail on warnings (commented out for now)
    # -W error

# Markers for test categorization
markers =
    unit: Unit tests that don't require external services
    integration: Integration tests that may require mocked services
    slow: Tests that take longer to run (>1 second)
    requires_openai: Tests that require OpenAI API key
    requires_ollama: Tests that require Ollama service
    acceptance: End-to-end acceptance tests

# Coverage configuration
[coverage:run]
source = botds
omit =
    */tests/*
    */test_*.py
    */__pycache__/*
    */site-packages/*
    */venv/*
    */virtualenv/*

[coverage:report]
precision = 2
show_missing = True
skip_covered = False
exclude_lines =
    # Standard pragma
    pragma: no cover
    # Don't complain about missing debug-only code
    def __repr__
    # Don't complain if tests don't hit defensive assertion code
    raise AssertionError
    raise NotImplementedError
    # Don't complain if non-runnable code isn't run
    if __name__ == .__main__.:
    # Don't complain about abstract methods
    @abstractmethod
    # Don't complain about type checking blocks
    if TYPE_CHECKING:
    # Don't complain about protocol methods
    @protocol

[coverage:html]
directory = audit-deployment/phase-2/04-ARTIFACTS/coverage-report/html

[coverage:json]
output = audit-deployment/phase-2/04-ARTIFACTS/coverage-report/coverage.json
pretty_print = True

